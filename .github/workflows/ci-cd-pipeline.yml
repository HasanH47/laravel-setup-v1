name: Laravel CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Job untuk mempersiapkan environment dan dependencies
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Cache NPM dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-npm-

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          tools: composer, phpunit
          coverage: xdebug

      - name: Install Dependencies
        run: |
          composer install --prefer-dist --no-interaction --no-progress --optimize-autoloader
          npm install
          npm run build

  # Job untuk Static Code Analysis
  code_analysis:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Run Static Code Analysis
        run: |
          vendor/bin/phpcs --standard=PSR12 app/
          vendor/bin/phpstan analyse --level=max

      - name: Run Security Check
        run: |
          composer audit
          vendor/bin/security-checker security:check

  # Job untuk menjalankan unit tests
  tests:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Run PHPUnit Tests
        run: vendor/bin/phpunit --coverage-text --coverage-clover=coverage.xml

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true

  # Job untuk menjalankan Dusk (end-to-end) tests
  dusk_tests:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Run Dusk Tests
        run: php artisan dusk

  # Job untuk deployment (hanya jika berada di branch tertentu)
  deploy:
    runs-on: ubuntu-latest
    needs: [setup, tests, dusk_tests]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to Server
        run: |
          # Add your deployment script here
          echo "Deploying application..."

